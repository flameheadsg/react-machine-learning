{"ast":null,"code":"import _regeneratorRuntime from \"/Users/flameheadsg/Desktop/Projects/play/react-machine-learning/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flameheadsg/Desktop/Projects/play/react-machine-learning/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/flameheadsg/Desktop/Projects/play/react-machine-learning/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flameheadsg/Desktop/Projects/play/react-machine-learning/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flameheadsg/Desktop/Projects/play/react-machine-learning/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flameheadsg/Desktop/Projects/play/react-machine-learning/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flameheadsg/Desktop/Projects/play/react-machine-learning/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/flameheadsg/Desktop/Projects/play/react-machine-learning/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/flameheadsg/Desktop/Projects/play/react-machine-learning/client/src/components/KnnScreen.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar KnnScreen =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(KnnScreen, _Component);\n\n  function KnnScreen(props) {\n    var _this;\n\n    _classCallCheck(this, KnnScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(KnnScreen).call(this, props));\n    _this.state = {\n      testSize: 0,\n      k: 0\n    };\n    _this.knn = _this.knn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTestSize = _this.handleTestSize.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleK = _this.handleK.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(KnnScreen, [{\n    key: \"knn\",\n    value: function () {\n      var _knn = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post('http://localhost:5000/knn/', {\n                  testSize: parseInt(this.state.testSize),\n                  k: parseInt(this.state.k)\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function knn() {\n        return _knn.apply(this, arguments);\n      }\n\n      return knn;\n    }()\n  }, {\n    key: \"handleTestSize\",\n    value: function handleTestSize(e) {\n      this.setState({\n        testSize: e.target.value\n      });\n    }\n  }, {\n    key: \"handleK\",\n    value: function handleK(e) {\n      this.setState({\n        k: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: styles.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"K-Nearest-Neighbor (KNN)\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Size of Test Set:\\xA0\\xA0\"), React.createElement(\"input\", {\n        value: this.state.testSize,\n        onChange: this.handleTestSize,\n        style: {\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Value of K:\\xA0\\xA0\"), React.createElement(\"input\", {\n        value: this.state.k,\n        onChange: this.handleK,\n        style: {\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.knn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"KNN\"));\n    }\n  }]);\n\n  return KnnScreen;\n}(Component);\n\nexport { KnnScreen as default };\nvar styles = {\n  main: {\n    width: 800,\n    display: \"inline-block\",\n    marginTop: 100,\n    padding: 40,\n    color: \"rgb(0, 61, 112)\",\n    backgroundColor: \"rgb(193, 227, 255)\",\n    borderRadius: 7\n  }\n};","map":{"version":3,"sources":["/Users/flameheadsg/Desktop/Projects/play/react-machine-learning/client/src/components/KnnScreen.js"],"names":["React","Component","axios","KnnScreen","props","state","testSize","k","knn","bind","handleTestSize","handleK","post","parseInt","e","setState","target","value","styles","main","display","fontSize","width","marginTop","padding","color","backgroundColor","borderRadius"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CADC;AAEXC,MAAAA,CAAC,EAAE;AAFQ,KAAb;AAKA,UAAKC,GAAL,GAAW,MAAKA,GAAL,CAASC,IAAT,uDAAX;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,uDAAtB;AACA,UAAKE,OAAL,GAAe,MAAKA,OAAL,CAAaF,IAAb,uDAAf;AAViB;AAWlB;;;;;;;;;;;;;uBAGOP,KAAK,CAACU,IAAN,CAAW,4BAAX,EAAyC;AAC7CN,kBAAAA,QAAQ,EAAEO,QAAQ,CAAC,KAAKR,KAAL,CAAWC,QAAZ,CAD2B;AAE7CC,kBAAAA,CAAC,EAAEM,QAAQ,CAAC,KAAKR,KAAL,CAAWE,CAAZ;AAFkC,iBAAzC,C;;;;;;;;;;;;;;;;;;mCAMOO,C,EAAG;AAChB,WAAKC,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEQ,CAAC,CAACE,MAAF,CAASC;AAArB,OAAd;AACD;;;4BAEOH,C,EAAG;AACT,WAAKC,QAAL,CAAc;AAAER,QAAAA,CAAC,EAAEO,CAAC,CAACE,MAAF,CAASC;AAAd,OAAd;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,KAAK,EAAEC,MAAM,CAACC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AACE,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,QADpB;AAEE,QAAA,QAAQ,EAAE,KAAKI,cAFjB;AAGE,QAAA,KAAK,EAAE;AAACW,UAAAA,QAAQ,EAAE;AAAX,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAHF,EAWE;AAAK,QAAA,KAAK,EAAE;AAACD,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AACE,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWE,CADpB;AAEE,QAAA,QAAQ,EAAE,KAAKI,OAFjB;AAGE,QAAA,KAAK,EAAE;AAACU,UAAAA,QAAQ,EAAE;AAAX,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAXF,EAoBE;AAAQ,QAAA,OAAO,EAAE,KAAKb,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBF,CADF;AAwBD;;;;EAtDoCP,S;;SAAlBE,S;AAyDrB,IAAMe,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJG,IAAAA,KAAK,EAAE,GADH;AAEJF,IAAAA,OAAO,EAAE,cAFL;AAGJG,IAAAA,SAAS,EAAE,GAHP;AAIJC,IAAAA,OAAO,EAAE,EAJL;AAKJC,IAAAA,KAAK,EAAE,iBALH;AAMJC,IAAAA,eAAe,EAAE,oBANb;AAOJC,IAAAA,YAAY,EAAE;AAPV;AADO,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class KnnScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      testSize: 0,\n      k: 0\n    };\n\n    this.knn = this.knn.bind(this);\n    this.handleTestSize = this.handleTestSize.bind(this);\n    this.handleK = this.handleK.bind(this);\n  }\n\n  async knn() {\n    await axios.post('http://localhost:5000/knn/', {\n      testSize: parseInt(this.state.testSize),\n      k: parseInt(this.state.k)\n    });\n  }\n\n  handleTestSize(e) {\n    this.setState({ testSize: e.target.value });\n  }\n\n  handleK(e) {\n    this.setState({ k: e.target.value });\n  }\n\n  render() {\n    return (\n      <div style={styles.main}>\n        <h2>K-Nearest-Neighbor (KNN)</h2>\n        <hr />\n        <div style={{display: \"flex\"}}>\n          <p>Size of Test Set:&nbsp;&nbsp;</p>\n          <input\n            value={this.state.testSize}\n            onChange={this.handleTestSize}\n            style={{fontSize: \"20px\"}}\n          />\n        </div>\n        <div style={{display: \"flex\"}}>\n          <p>Value of K:&nbsp;&nbsp;</p>\n          <input\n            value={this.state.k}\n            onChange={this.handleK}\n            style={{fontSize: \"20px\"}}\n          />\n        </div>\n\n        <button onClick={this.knn}>KNN</button>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  main: {\n    width: 800,\n    display: \"inline-block\",\n    marginTop: 100,\n    padding: 40,\n    color: \"rgb(0, 61, 112)\",\n    backgroundColor: \"rgb(193, 227, 255)\",\n    borderRadius: 7\n  }\n};\n"]},"metadata":{},"sourceType":"module"}